# Starship Configuration - Modern & Productive
# Place this file at: ~/.config/starship.toml

# Main prompt format - defines the order of modules
format = """
[╭─](bold green)\
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$fill\
$nodejs\
$python\
$rust\
$golang\
$java\
$php\
$docker_context\
$kubernetes\
$cmd_duration\
$time\
$line_break\
[╰─](bold green)$character"""

# Timeout for starship to execute commands (milliseconds)
command_timeout = 1000

# Add a newline before each prompt
add_newline = true

# Username
[username]
style_user = "bold yellow"
style_root = "bold red"
format = "[$user]($style) "
disabled = false
show_always = true

# Hostname
[hostname]
ssh_only = false
format = "on [$hostname](bold red) "
trim_at = "."
disabled = false

# Directory
[directory]
truncation_length = 3
truncate_to_repo = true
format = "in [$path]($style)[$read_only]($read_only_style) "
style = "bold cyan"
read_only = " 🔒"
read_only_style = "red"
truncation_symbol = "…/"
home_symbol = "~"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
"Videos" = " "
"Projects" = "󰲋 "
"Code" = " "
".config" = " "

# Git Branch
[git_branch]
symbol = " "
format = "on [$symbol$branch(:$remote_branch)]($style) "
style = "bold purple"
truncation_length = 20
truncation_symbol = "…"

# Git Status
[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "bold red"
conflicted = "⚔️ "
ahead = "⇡${count}"
behind = "⇣${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
untracked = "?${count}"
stashed = "📦"
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = "✘${count}"

# Git Metrics
[git_metrics]
disabled = false
added_style = "bold green"
deleted_style = "bold red"
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'

# Fill - creates space between left and right sections
[fill]
symbol = " "

# Command Duration
[cmd_duration]
min_time = 500
format = "took [$duration]($style) "
style = "bold yellow"
show_milliseconds = false
show_notifications = false

# Time
[time]
disabled = false
format = "at [$time]($style) "
style = "bold white"
time_format = "%T"
utc_time_offset = "local"

# Character - prompt symbol
[character]
success_symbol = "[❯](bold green)"
error_symbol = "[❯](bold red)"
vimcmd_symbol = "[❮](bold green)"

# Programming Languages

[nodejs]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold green"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]

[python]
symbol = " "
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_version_name = false
detect_extensions = ["py"]
detect_files = [".python-version", "Pipfile", "__init__.py", "pyproject.toml", "requirements.txt", "setup.py", "tox.ini"]
detect_folders = []

[rust]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold red"
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[golang]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold cyan"
detect_extensions = ["go"]
detect_files = ["go.mod", "go.sum", "go.work", "glide.yaml", "Gopkg.yml", "Gopkg.lock", ".go-version"]
detect_folders = ["Godeps"]

[java]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold red"
detect_extensions = ["java", "class", "jar", "gradle", "clj", "cljc"]
detect_files = ["pom.xml", "build.gradle.kts", "build.sbt", ".java-version", "deps.edn", "project.clj", "build.boot"]
detect_folders = []

[php]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold purple"
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]
detect_folders = []

# Container & Orchestration

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "bold blue"
only_with_files = true
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[kubernetes]
symbol = "☸ "
format = 'on [$symbol$context( \($namespace\))]($style) '
style = "bold blue"
disabled = false

[kubernetes.context_aliases]
"dev.local.cluster.k8s" = "dev"
"gke_.*_(?P<var_cluster>[\\w-]+)" = "gke-$var_cluster"

# Package Version
[package]
symbol = "📦 "
format = "is [$symbol$version]($style) "
style = "bold 208"
display_private = false
disabled = false

# Battery
[battery]
full_symbol = "🔋"
charging_symbol = "⚡"
discharging_symbol = "💀"
unknown_symbol = "🔌"
empty_symbol = "🪫"

[[battery.display]]
threshold = 10
style = "bold red"

[[battery.display]]
threshold = 30
style = "bold yellow"

[[battery.display]]
threshold = 100
style = "bold green"

# Memory Usage
[memory_usage]
disabled = true
threshold = 75
symbol = "🐏 "
format = "via $symbol[$ram( | $swap)]($style) "
style = "bold dimmed white"

# Status
[status]
disabled = false
format = '[\[$symbol$status\]]($style) '
symbol = "✖"
success_symbol = ""
not_executable_symbol = "🚫"
not_found_symbol = "🔍"
sigint_symbol = "🧱"
signal_symbol = "⚡"
style = "bold red"
map_symbol = true

# Shell
[shell]
fish_indicator = "🐟"
bash_indicator = "bash"
zsh_indicator = "zsh"
disabled = false
format = '[$indicator]($style) '
style = "bold white"

# OS
[os]
disabled = true
format = "on [($name )]($style)"

[os.symbols]
Fedora = "󰣛 "
Ubuntu = " "
Arch = "󰣇 "
Debian = " "
Macos = " "
Windows = "󰍲 "

# AWS
[aws]
symbol = "☁️  "
format = 'on [$symbol($profile )(\($region\) )]($style)'
style = "bold yellow"
disabled = false

# Additional useful modules

[conda]
symbol = "🅒 "
format = "via [$symbol$environment]($style) "
style = "bold green"

[terraform]
symbol = "💠 "
format = "via [$symbol$workspace]($style) "
style = "bold purple"

[cmake]
symbol = "△ "
format = "via [$symbol($version )]($style)"
style = "bold blue"

[c]
symbol = " "
format = "via [$symbol($version(-$name) )]($style)"
style = "bold blue"

[lua]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold blue"

[ruby]
symbol = " "
format = "via [$symbol($version )]($style)"
style = "bold red"
